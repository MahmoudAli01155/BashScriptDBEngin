#!/bin/bash

current_db=""

main_menu() {
  clear
  echo "Main Menu:"
  echo "1. Create Database"
  echo "2. List Databases"
  echo "3. Connect To Database"
  echo "4. Drop Database"
  echo "5. Exit"
  read -p "Enter your choice: " choice
  case $choice in
    1) create_database;;
    2) list_databases;;
    3) connect_to_database;;
    4) drop_database;;
    5) exit;;
    *) echo "Invalid choice. Please try again."; main_menu;;
  esac
}

create_database() {
  read -p "Enter the name of the new database: " db_name
  if [ -d "$db_name" ]; then
    echo "Error: Database already exists."
    main_menu
  else
    mkdir $db_name
    echo "Database $db_name created successfully."
    main_menu
  fi
}

list_databases() {
  echo "List of databases:"
  ls -l | grep "^d" | awk '{print $9}'
  main_menu
}

connect_to_database() {
  read -p "Enter the name of the database to connect to: " db_name
  if [ -d "$db_name" ]; then
    current_db=$db_name
    table_menu
  else
    echo "Error: Database not found."
    main_menu
  fi
}

drop_database() {
  read -p "Enter the name of the database to drop: " db_name
  if [ -d "$db_name" ]; then
    rm -r $db_name
    echo "Database $db_name dropped successfully."
    main_menu
  else
    echo "Error: Database not found."
    main_menu
  fi
}

table_menu() {
  clear
  echo "Table Menu:"
  echo "1. Create Table"
  echo "2. List Tables"
  echo "3. Drop Table"
  echo "4. Insert into Table"
  echo "5. Select From Table"
  echo "6. Delete From Table"
  echo "7. Update Table"
  echo "8. Go Back"
  read -p "Enter your choice: " choice
  case $choice in
    1) create_table;;
    2) list_tables;;
    3) drop_table;;
    4) insert_into_table;;
    5) select_from_table;;
    6) delete_from_table;;
    7) update_table;;
    8) main_menu;;
    *) echo "Invalid choice. Please try again."; table_menu;;
  esac
}

create_table() {
  read -p "Enter the name of the new table: " table_name
  if [ -f "$current_db/$table_name" ]; then
    echo "Error: Table already exists."
    table_menu
  else
    read -p "Enter column names and datatypes (ex: 'name varchar(255), age int'): " columns
    read -p "Enter primary key column name: " primary_key
    echo -e "columns: $columns\nprimary_key: $primary_key" > "$current_db/$table_name"
    echo "Table $table_name created successfully."
    table_menu
  fi
}
list_tables() {
  echo "List of tables:"
  ls $current_db
  table_menu
}

drop_table() {
  read -p "Enter the name of the table to drop: " table_name
  if [ -f "$current_db/$table_name" ]; then
    rm "$current_db/$table_name"
    echo "Table $table_name dropped successfully."
    table_menu
  else
    echo "Error: Table not found."
    table_menu
  fi
}

main_menu


